Imports Gentle.Framework

Namespace MediaPortal
    Namespace TvDatabase
        <TableName("myTNC")> _
        Public Class myTNC
            Inherits Persistent


#Region "Members"
            Private m_isChanged As Boolean

            <TableColumn("Name", NotNull:=True), PrimaryKey(AutoGenerated:=False)> _
            Private m_name As String


            <TableColumn("matchRule", NotNull:=False)> _
            Private m_matchRule As String

#End Region
#Region "Constructors"
            Public Sub New(ByVal name As String)
                Me.m_name = name
            End Sub
#End Region
#Region "Public Properties"
            Public ReadOnly Property IsChanged() As Boolean
                Get
                    Return m_isChanged
                End Get
            End Property
            Public Property name() As String
                Get
                    Return m_name
                End Get
                Set(ByVal value As String)
                    m_isChanged = m_isChanged Or m_name <> value
                    m_name = value
                End Set
            End Property
            Public Property matchRule() As String
                Get
                    Return m_matchRule
                End Get
                Set(ByVal value As String)
                    m_isChanged = m_isChanged Or m_matchRule <> value
                    m_matchRule = value
                End Set
            End Property
#End Region

#Region "Storage and Retrieval"

            ''' <summary>
            ''' Static method to retrieve all instances that are stored in the database in one call
            ''' </summary>
            Public Shared Function ListAll() As IList(Of myTNC)
                Return Gentle.Framework.Broker.RetrieveList(Of myTNC)()
            End Function

            ''' <summary>
            ''' Retrieves an entity given it's id.
            ''' </summary>
            Public Overloads Shared Function Retrieve(ByVal name As String) As myTNC
                Dim key As New Key(GetType(myTNC), True, "Name", name)
                Return Gentle.Framework.Broker.RetrieveInstance(Of myTNC)(key)
            End Function

            ''' <summary>
            ''' Retrieves an entity given it's id, using Gentle.Framework.Key class.
            ''' This allows retrieval based on multi-column keys.
            ''' </summary>
            Public Overloads Shared Function Retrieve(ByVal key As Key) As myTNC
                Return Gentle.Framework.Broker.RetrieveInstance(Of myTNC)(key)
            End Function

            ''' <summary>
            ''' Persists the entity if it was never persisted or was changed.
            ''' </summary>
            Public Overrides Sub Persist()
                If IsChanged OrElse Not IsPersisted Then
                    Try
                        MyBase.Persist()
                    Catch ex As Exception
                        MyLog.[Error]("Exception in myTNC.Persist() with Message {0}", ex.Message)
                        Return
                    End Try
                    m_isChanged = False
                End If
            End Sub

#End Region
            Public Sub Delete()
                Dim list As IList(Of myTNC) = ListAll()
                For Each map As myTNC In list
                    map.Remove()
                Next
            End Sub
        End Class
    End Namespace
End Namespace


